snippet tc
	require 'test/unit'

	require '${1:library_file_name}'

	class Test${2:$1} < Test::Unit::TestCase
		def test_${3:case_name}
			${0}
		end
	end
snippet as
	assert ${1:test}, '${2:Failure message.}'
snippet ase
	assert_equal ${1:expected}, ${2:actual}
snippet asne
	assert_not_equal ${1:unexpected}, ${2:actual}
snippet asid
	assert_in_delta ${1:expected_float}, ${2:actual_float}, ${3:2**-20}
snippet asi
	assert_includes ${1:collection}, ${2:object}
snippet asio
	assert_instance_of ${1:ExpectedClass}, ${2:actual_instance}
snippet asko
	assert_kind_of ${1:ExpectedKind}, ${2:actual_instance}
snippet asn
	assert_nil ${1:instance}
snippet asnn
	assert_not_nil ${1:instance}
snippet asm
	assert_match(/${1:expected_pattern}/, ${2:actual_string})
snippet asnm
	assert_no_match(/${1:unexpected_pattern}/, ${2:actual_string})
snippet aso
	assert_operator ${1:left}, :${2:operator}, ${3:right}
snippet asr
	assert_raise ${1:Exception} { ${0} }
snippet asrd
	assert_raise ${1:Exception} do
		${0}
	end
snippet asnr
	assert_nothing_raised ${1:Exception} { ${0} }
snippet asnrd
	assert_nothing_raised ${1:Exception} do
		${0}
	end
snippet asrt
	assert_respond_to ${1:object}, :${2:method}
snippet ass assert_same(..)
	assert_same ${1:expected}, ${2:actual}
snippet ass assert_send(..)
	assert_send [${1:object}, :${2:message}, ${3:args}]
snippet asns
	assert_not_same ${1:unexpected}, ${2:actual}
snippet ast
	assert_throws :${1:expected}, -> { ${0} }
snippet astd
	assert_throws :${1:expected} do
		${0}
	end
snippet asnt
	assert_nothing_thrown { ${0} }
snippet asntd
	assert_nothing_thrown do
		${0}
	end
